I"ßE
<h2>Overview</h2>

<p>The <a href="/basic-syntax">basic syntax</a> outlined in John Gruberâ€™s original design document added many of the elements needed on a day-to-day basis, but it wasnâ€™t enough for some people. Thatâ€™s where extended syntax comes in.</p>

<p>Several individuals and organizations took it upon themselves to extend the basic syntax by adding additional elements like tables, code blocks, syntax highlighting, URL auto-linking, and footnotes. These elements can be enabled by using a lightweight markup language that builds upon the basic Markdown syntax, or by adding an extension to a compatible Markdown processor.</p>

<h2>Availability</h2>

<p>Not all Markdown applications support extended syntax elements. Youâ€™ll need to check whether or not the lightweight markup language your application is using supports the extended syntax elements you want to use. If it doesnâ€™t, it may still be possible to enable extensions in your Markdown processor.</p>

<h3 id="lightweight-markup-languages">Lightweight Markup Languages</h3>

<p>There are several lightweight markup languages that are <em>supersets</em> of Markdown. They include Gruberâ€™s basic syntax and build upon it by adding additional elements like tables, code blocks, syntax highlighting, URL auto-linking, and footnotes. Many of the most popular Markdown applications use one of the following lightweight markup languages:</p>

<ul>
  <li><a href="https://commonmark.org">CommonMark</a></li>
  <li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown (GFM)</a></li>
  <li><a href="https://michelf.ca/projects/php-markdown/extra/">Markdown Extra</a></li>
  <li><a href="https://fletcherpenney.net/multimarkdown/">MultiMarkdown</a></li>
  <li><a href="https://rmarkdown.rstudio.com/">R Markdown</a></li>
</ul>

<h3 id="markdown-processors">Markdown Processors</h3>

<p>There are <a href="https://github.com/markdown/markdown.github.com/wiki/Implementations">dozens of Markdown processors</a> available. Many of them allow you to add extensions that enable extended syntax elements. Check your processorâ€™s documentation for more information.</p>

<h2>Tables</h2>

<p>To add a table, use three or more hyphens (<code class="highlighter-rouge">---</code>) to create each columnâ€™s header, and use pipes (<code class="highlighter-rouge">|</code>) to separate each column. You can optionally add pipes on either end of the table.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| Syntax      | Description |
| ----------- | ----------- |
| Header      | Title       |
| Paragraph   | Text        |
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<table class="table table-bordered">
  <thead>
    <tr>
      <th>Syntax</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Header</td>
      <td>Title</td>
    </tr>
    <tr>
      <td>Paragraph</td>
      <td>Text</td>
    </tr>
  </tbody>
</table>

<p>Cell widths can vary, as shown below. The rendered output will look the same.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| Syntax | Description |
| --- | ----------- |
| Header | Title |
| Paragraph | Text |
</code></pre></div></div>

<div class="alert alert-success">
  <i class="fas fa-lightbulb"></i> <strong>Tip:</strong> Creating tables with hyphens and pipes can be tedious. To speed up the process, try using the <a href="https://www.tablesgenerator.com/markdown_tables">Markdown Tables Generator</a>. Build a table using the graphical interface, and then copy the generated Markdown-formatted text into your file.
</div>

<h3 id="alignment">Alignment</h3>

<p>You can align text in the columns to the left, right, or center by adding a colon (<code class="highlighter-rouge">:</code>) to the left, right, or on both side of the hyphens within the header row.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| Syntax      | Description | Test Text     |
| :---        |    :----:   |          ---: |
| Header      | Title       | Here's this   |
| Paragraph   | Text        | And more      |
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<table class="table table-bordered">
  <thead>
    <tr>
      <th style="text-align: left">Syntax</th>
      <th style="text-align: center">Description</th>
      <th style="text-align: right">Test Text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Header</td>
      <td style="text-align: center">Title</td>
      <td style="text-align: right">Hereâ€™s this</td>
    </tr>
    <tr>
      <td style="text-align: left">Paragraph</td>
      <td style="text-align: center">Text</td>
      <td style="text-align: right">And more</td>
    </tr>
  </tbody>
</table>

<h3 id="formatting-text-in-tables">Formatting Text in Tables</h3>

<p>You can format the text within tables. For example, you can add <a href="/basic-syntax/#links">links</a>, <a href="/basic-syntax/#code-1">code</a> (words or phrases in backticks (<code class="highlighter-rouge">`</code>) only, not <a href="/basic-syntax/#code-blocks">code blocks</a>), and <a href="/basic-syntax/#emphasis">emphasis</a>.</p>

<p>You canâ€™t add headings, blockquotes, lists, horizontal rules, images, or HTML tags.</p>

<h3 id="escaping-pipe-characters-in-tables">Escaping Pipe Characters in Tables</h3>

<p>You can display a pipe (<code class="highlighter-rouge">|</code>) character in a table by using its HTML character code (<code class="highlighter-rouge">&amp;#124;</code>).</p>

<h2>Fenced Code Blocks</h2>

<p>The basic Markdown syntax allows you to create <a href="/basic-syntax#code-blocks">code blocks</a> by indenting lines by four spaces or one tab. If you find that inconvenient, try using fenced code blocks. Depending on your Markdown processor or editor, youâ€™ll use three backticks (<code>```</code>) or three tildes (<code class="highlighter-rouge">~~~</code>) on the lines before and after the code block. The best part? You donâ€™t have to indent any lines!</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```
{
  "firstName": "John",
  "lastName": "Smith",
  "age": 25
}
```
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "firstName": "John",
  "lastName": "Smith",
  "age": 25
}
</code></pre></div></div>

<div class="alert alert-success">
  <i class="fas fa-lightbulb"></i> <strong>Tip:</strong> Need to display backticks inside a code block? See <a href="/basic-syntax/#escaping-backticks">this section</a> to learn how to escape them.
</div>

<h3 id="syntax-highlighting">Syntax Highlighting</h3>

<p>Many Markdown processors support syntax highlighting for fenced code blocks. This feature allows you to add color highlighting for whatever language your code was written in. To add syntax highlighting, specify a language next to the backticks before the fenced code block.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```json
{
  "firstName": "John",
  "lastName": "Smith",
  "age": 25
}
```
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"firstName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"John"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lastName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Smith"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"age"</span><span class="p">:</span><span class="w"> </span><span class="mi">25</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2>Footnotes</h2>

<p>Footnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page.</p>

<p>To create a footnote reference, add a caret and an identifier inside brackets (<code class="highlighter-rouge">[^1]</code>). Identifiers can be numbers or words, but they canâ€™t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself â€” in the output, footnotes are numbered sequentially.</p>

<p>Add the footnote using another caret and number inside brackets with a colon and text (<code class="highlighter-rouge">[^1]: My footnote.</code>). You donâ€™t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Here's a simple footnote,[^1] and here's a longer one.[^bignote]

[^1]: This is the first footnote.

[^bignote]: Here's one with multiple paragraphs and code.

    Indent paragraphs to include them in the footnote.

    `{ my code }`

    Add as many paragraphs as you like.
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<p>Hereâ€™s a simple footnote,<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">1</a></sup> and hereâ€™s a longer one.<sup id="fnref:bignote" role="doc-noteref"><a href="#fn:bignote" class="footnote">2</a></sup></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>This is the first footnote.Â <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:bignote" role="doc-endnote">
      <p>Hereâ€™s one with multiple paragraphs and code.</p>

      <p>Indent paragraphs to include them in the footnote.</p>

      <p><code class="highlighter-rouge">{ my code }</code></p>

      <p>Add as many paragraphs as you like.Â <a href="#fnref:bignote" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>

<h2>Heading IDs</h2>

<p>Many Markdown processors support custom IDs for <a href="/basic-syntax/#headings">headings</a> â€” some Markdown processors automatically add them. Adding custom IDs allows you to link directly to headings and modify them with CSS. To add a custom heading ID, enclose the custom ID in curly braces on the same line as the heading.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>### My Great Heading {#custom-id}
</code></pre></div></div>

<p>The HTML looks like this:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h3</span> <span class="na">id=</span><span class="s">"custom-id"</span><span class="nt">&gt;</span>My Great Heading<span class="nt">&lt;/h3&gt;</span>
</code></pre></div></div>

<h3 id="linking-to-heading-ids">Linking to Heading IDs</h3>

<p>You can link to headings with custom IDs in the file by creating a <a href="/basic-syntax/#links">standard link</a> with a number sign (<code class="highlighter-rouge">#</code>) followed by the custom heading ID.</p>

<table class="table table-bordered">
  <thead class="thead-light">
    <tr>
      <th>Markdown</th>
      <th>HTML</th>
      <th>Rendered Output</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">[Heading IDs](#heading-ids)</code></td>
      <td><code class="highlighter-rouge"> &lt;a href="#heading-ids"&gt;Heading IDs&lt;/a&gt;</code></td>
      <td><a href="#heading-ids">Heading IDs</a></td>
    </tr>
  </tbody>
</table>

<p>Other websites can link to the heading by adding the custom heading ID to the full URL of the webpage (e.g, <code class="highlighter-rouge">[Heading IDs](https://www.markdownguide.org/extended-syntax#heading-ids)</code>).</p>

<h2>Definition Lists</h2>

<p>Some Markdown processors allow you to create <em>definition lists</em> of terms and their corresponding definitions. To create a definition list, type the term on the first line. On the next line, type a colon followed by a space and the definition.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>First Term
: This is the definition of the first term.

Second Term
: This is one definition of the second term.
: This is another definition of the second term.
</code></pre></div></div>

<p>The HTML looks like this:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dl&gt;</span>
  <span class="nt">&lt;dt&gt;</span>First Term<span class="nt">&lt;/dt&gt;</span>
  <span class="nt">&lt;dd&gt;</span>This is the definition of the first term.<span class="nt">&lt;/dd&gt;</span>
  <span class="nt">&lt;dt&gt;</span>Second Term<span class="nt">&lt;/dt&gt;</span>
  <span class="nt">&lt;dd&gt;</span>This is one definition of the second term. <span class="nt">&lt;/dd&gt;</span>
  <span class="nt">&lt;dd&gt;</span>This is another definition of the second term.<span class="nt">&lt;/dd&gt;</span>
<span class="nt">&lt;/dl&gt;</span>
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<dl>
  <dt>First Term</dt>
  <dd>This is the definition of the first term.</dd>
  <dt>Second Term</dt>
  <dd>This is one definition of the second term.</dd>
  <dd>This is another definition of the second term.</dd>
</dl>

<h2>Strikethrough</h2>

<p>You can strikethrough words by putting a horizontal line through the center of them. The result looks <del>like this</del>. This feature allows you to indicate that certain words are a mistake not meant for inclusion in the document. To strikethrough words, use two tilde symbols (<code class="highlighter-rouge">~~</code>) before and after the words.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~~The world is flat.~~ We now know that the world is round.
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<p><del>The world is flat.</del> We now know that the world is round.</p>

<h2>Task Lists</h2>

<p>Task lists allow you to create a list of items with checkboxes. In Markdown applications that support task lists, checkboxes will be displayed next to the content. To create a task list, add dashes (<code class="highlighter-rouge">-</code>) and brackets with a space (<code class="highlighter-rouge">[ ]</code>) in front of task list items. To select a checkbox, add an <code class="highlighter-rouge">x</code> in between the brackets (<code class="highlighter-rouge">[x]</code>).</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- [x] Write the press release
- [ ] Update the website
- [ ] Contact the media
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<p><img src="/assets/images/tasklist.png" class="img-fluid" alt="Markdown task list" /></p>

<h2>Emoji</h2>

<p>There are two ways to add emoji to Markdown files: copy and paste the emoji into your Markdown-formatted text, or type <em>emoji shortcodes</em>.</p>

<h3 id="copying-and-pasting-emoji">Copying and Pasting Emoji</h3>

<p>In most cases, you can simply copy an emoji from a source like <a href="https://emojipedia.org/">Emojipedia</a> and paste it into your document. Many Markdown applications will automatically display the emoji in the Markdown-formatted text. The HTML and PDF files you export from your Markdown application should display the emoji.</p>

<div class="alert alert-success">
  <i class="fas fa-lightbulb"></i> <strong>Tip:</strong> If you're using a static site generator, make sure you <a href="https://www.w3.org/International/tutorials/tutorial-char-enc/">encode HTML pages as UTF-8</a>.
</div>

<h3 id="using-emoji-shortcodes">Using Emoji Shortcodes</h3>

<p>Some Markdown applications allow you to insert emoji by typing emoji shortcodes. These begin and end with a colon and include the name of an emoji.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Gone camping! :tent: Be back soon.

That is so funny! :joy:
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<p>Gone camping! â›º Be back soon.</p>

<p>That is so funny! ðŸ˜‚</p>

<div class="alert alert-info">
  <i class="fas fa-info-circle"></i> <strong>Note:</strong> You can use this <a href="https://gist.github.com/rxaviers/7360908">list of emoji shortcodes</a>, but keep in mind that emoji shortcodes vary from application to application. Refer to your Markdown application's documentation for more information.
</div>

<h2>Automatic URL Linking</h2>

<p>Many Markdown processors automatically turn URLs into links. That means if you type http://www.example.com, your Markdown processor will automatically turn it into a link even though you havenâ€™t <a href="/basic-syntax/#links">used brackets</a>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://www.example.com
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<p><a href="http://www.example.com">http://www.example.com</a></p>

<h2 id="disabling-automatic-url-linking">Disabling Automatic URL Linking</h2>

<p>If you donâ€™t want a URL to be automatically linked, you can remove the link by <a href="/basic-syntax/#code">denoting the URL as code</a> with backticks.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>`http://www.example.com`
</code></pre></div></div>

<p>The rendered output looks like this:</p>

<p><code class="highlighter-rouge">http://www.example.com</code></p>

:ET